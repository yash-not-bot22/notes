[{"D:\\react\\project3_react\\inotebook\\frontend\\src\\index.js":"1","D:\\react\\project3_react\\inotebook\\frontend\\src\\App.js":"2","D:\\react\\project3_react\\inotebook\\frontend\\src\\components\\cards.js":"3","D:\\react\\project3_react\\inotebook\\frontend\\src\\components\\login.js":"4","D:\\react\\project3_react\\inotebook\\frontend\\src\\components\\signup.js":"5","D:\\react\\project3_react\\inotebook\\frontend\\src\\context\\setnote.js":"6","D:\\react\\project3_react\\inotebook\\frontend\\src\\components\\navbar.js":"7","D:\\react\\project3_react\\inotebook\\frontend\\src\\components\\home.js":"8","D:\\react\\project3_react\\inotebook\\frontend\\src\\context\\notecontext.js":"9","D:\\react\\project3_react\\inotebook\\frontend\\src\\components\\card.js":"10"},{"size":467,"mtime":1696945344966,"results":"11","hashOfConfig":"12"},{"size":1502,"mtime":1705671253886,"results":"13","hashOfConfig":"12"},{"size":3279,"mtime":1705008298791,"results":"14","hashOfConfig":"12"},{"size":2704,"mtime":1705828422046,"results":"15","hashOfConfig":"12"},{"size":2510,"mtime":1705820205667,"results":"16","hashOfConfig":"12"},{"size":3077,"mtime":1705820222651,"results":"17","hashOfConfig":"12"},{"size":1661,"mtime":1705249867416,"results":"18","hashOfConfig":"12"},{"size":1933,"mtime":1705250254994,"results":"19","hashOfConfig":"12"},{"size":105,"mtime":1695460478198,"results":"20","hashOfConfig":"12"},{"size":1047,"mtime":1696166282263,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1qyelks",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"25"},"D:\\react\\project3_react\\inotebook\\frontend\\src\\index.js",[],[],[],"D:\\react\\project3_react\\inotebook\\frontend\\src\\App.js",["57"],[],"import \"./App.css\";\nimport Navbar from \"./components/navbar\";\nimport Home from \"./components/home\";\nimport { useState } from \"react\";\nimport { Route, Routes, BrowserRouter} from \"react-router-dom\";\nimport Setnote from \"./context/setnote\";\nimport Cards from \"./components/cards\";\nimport Login from \"./components/login\";\nimport Signup from \"./components/signup\";\n\n\n\n\n\nfunction App() {\n  const[logged,setlogged]=useState(false);\n  const loggedmode=()=>{\n    if(localStorage.getItem('token')!==\"\")\n    setlogged(true);\n    else{\n      setlogged(false);\n    }\n  }\n  const [mode, setmode] = useState(\"light\");\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    }\n   \n  };\n  return (\n    <> \n       <>\n        \n      <BrowserRouter>\n      <Setnote>\n        <Navbar title=\"iNotebook\" theme={mode} log={logged} logstatus={loggedmode} toggle={togglemode} />\n        \n        <Routes>\n        \n          <Route path=\"/\" element={<Home logstatus={loggedmode} theme={mode}/>}/>\n          <Route path=\"/login\" element={<Login logstatus={loggedmode} theme={mode}/>}/>\n          <Route path=\"/signup\" element={<Signup logstatus={loggedmode} theme={mode}/>}/>\n          \n          \n          \n        </Routes>\n        \n        \n\n        \n        \n        </Setnote>\n      </BrowserRouter>\n      \n      </>\n    </>\n  );\n}\n\nexport default App;\n","D:\\react\\project3_react\\inotebook\\frontend\\src\\components\\cards.js",["58","59"],[],"import React, { useEffect, useRef,useState } from 'react'\r\nimport Card from './card'\r\nimport { useContext } from 'react'\r\nimport Notecontext from '../context/notecontext'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nfunction Cards(props) {\r\n    \r\n    const {notes,addnote,getnotes,editnote}=useContext(Notecontext)\r\n    let navigate=useNavigate();\r\n\r\n    useEffect(()=>{\r\n      if(localStorage.getItem('token'))\r\n      {\r\n        \r\n        getnotes();\r\n      }\r\n      \r\n  \r\n      else\r\n      navigate('/login');\r\n  \r\n    },[])\r\n    const [note,setnote]=useState({etitle:\"\",edescription:\"\",etag:\"\",id:\"\"})\r\n\r\n    const ref2=useRef(null)\r\n    const ref = useRef(null)\r\n    const editnotee=(notee)=>{\r\n        setnote({etitle:notee.title,edescription:notee.description,etag:notee.tag,id:notee._id})\r\n        ref.current.click()\r\n    }\r\n\r\n    const makingnote=(e)=>{\r\n      setnote({...note,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    const addnotee=(e)=>{\r\n      ref2.current.click()\r\n      e.preventDefault();\r\n      editnote(note.etitle,note.edescription,note.etag,note.id);\r\n    }\r\n    \r\n    \r\n\r\n  return (\r\n    <>\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    <div className='container '>\r\n    <button ref={ref} type=\"button\" className=\"btn btn-primary d-none\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n  Launch demo modal\r\n</button>\r\n\r\n    <div className=\"modal\" id=\"exampleModal\" tabIndex=\"-1\">\r\n  <div className=\"modal-dialog\">\r\n    <div className=\"modal-content\">\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-etitle\">edit note</h5>\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n      <form>\r\n  <div className=\"mb-3 dark\">\r\n    <label htmlFor=\"etitle\" className=\"form-label\">title of note</label>\r\n    <input type=\"text\" name=\"etitle\" className=\"form-control\" value={note.etitle} onChange={makingnote} id=\"etitle\" aria-describedby=\"emailHelp\"/>\r\n    <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\r\n  </div>\r\n  <div className=\"mb-3\">\r\n    <label htmlFor=\"edescription\" className=\"form-label\">description</label>\r\n    <input type=\"text\" name=\"edescription\" value={note.edescription} className=\"form-control\" onChange={makingnote} id=\"edescription\"/>\r\n  </div>\r\n  <div className=\"mb-3 form-check\">\r\n    <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\"/>\r\n    <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Check me out</label>\r\n  </div>\r\n  <div className=\"modal-footer\">\r\n        <button type=\"button\" ref={ref2} className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" onClick={addnotee}  className=\"btn btn-primary\">Save changes</button>\r\n      </div>\r\n</form>\r\n\r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n</div>\r\n        <div className='row justify-content-center' >\r\n        {notes.map((i)=>{\r\n            return(\r\n                \r\n            <Card theme={props.theme} key={i._id} note={i} editnote={editnotee} title={i.title} id={i._id} description={i.description} tag={i.title}/>\r\n            \r\n            )\r\n        })}\r\n        </div>\r\n        \r\n      \r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cards\r\n","D:\\react\\project3_react\\inotebook\\frontend\\src\\components\\login.js",["60"],[],"D:\\react\\project3_react\\inotebook\\frontend\\src\\components\\signup.js",[],[],"D:\\react\\project3_react\\inotebook\\frontend\\src\\context\\setnote.js",["61","62","63","64"],[],"import React, { useEffect } from 'react'\r\nimport Notecontext from './notecontext'\r\nimport { useState } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nfunction Setnote(props) {\r\n \r\n  \r\n  const [notes,setnotes]= useState([])\r\n  //add a note\r\n  \r\n\r\n  \r\n  //getallnotes\r\n  \r\n\r\n  const getnotes=async()=> {\r\n   \r\n    const response = await fetch(\"https://notes-api-kappa.vercel.app/api/notes/fetchallnotes\", {\r\n      method: \"GET\", \r\n      \r\n      headers: {\r\n        \"auth-token\": localStorage.getItem('token'),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      \r\n      \r\n    });\r\n    const newnotes= await response.json()\r\n    setnotes(newnotes)\r\n     // parses JSON response into native JavaScript objects\r\n  }\r\n  \r\n  \r\n  \r\n\r\n\r\n  \r\n  const addNote=async(title,description,tag)=>{\r\n\r\n    const response = await fetch(`https://notes-api-kappa.vercel.app/api/notes/addnote`, {\r\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n        \r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"auth-token\":localStorage.getItem('token'),\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n       \r\n        body: JSON.stringify({title,description,tag}), // body data type must match \"Content-Type\" header\r\n      });\r\n      const notee= await response.json();\r\n\r\n    const note={\r\n      \"title\":title,\r\n      \"description\":description,\r\n      \"tag\":tag,\r\n      \"_id\":notee._id\r\n    }\r\n    \r\n    \r\n    setnotes(notes.concat(note))\r\n\r\n  }\r\n\r\n\r\n  //delete a note\r\n  const deletenote=async(id)=>{\r\n    const res=  await fetch(`https://notes-api-kappa.vercel.app/api/notes/deletenote/${id}`,{\r\n      method: \"DELETE\",\r\n      headers:{\r\n        \"auth-token\": localStorage.getItem('token'),\r\n\r\n      }\r\n    }) ;\r\n\r\n    const newnotes=notes.filter((note)=>{return id!==note._id})\r\n    setnotes(newnotes)\r\n\r\n  }\r\n  //edit a note\r\n  const editnote= async(title,description,tag,id)=>{\r\n    \r\n    \r\n      const response = await fetch(`https://notes-api-kappa.vercel.app/api/notes/updatenote/${id}`, {\r\n        method: \"PUT\", // *GET, POST, PUT, DELETE, etc.\r\n        \r\n        headers: {\r\n          \"auth-token\": localStorage.getItem('token'),\r\n           'Content-Type': 'application/json',\r\n        },\r\n       \r\n        body: JSON.stringify({title,description,tag}), // body data type must match \"Content-Type\" header\r\n      });\r\n      const json =await ( response.json()) // parses JSON response into native JavaScript objects\r\n    \r\n      \r\n\r\n    \r\n  \r\n     // setnotes(notes.concat(json))\r\n    \r\n    let newnotes=JSON.parse(JSON.stringify(notes))\r\n    let i;\r\n    for( i=0;i<newnotes.length;i++)\r\n    {\r\n      if(newnotes[i]._id===id)\r\n      {\r\n        newnotes[i].title=title;\r\n        newnotes[i].description=description;\r\n        newnotes[i].tag=tag;\r\n      }\r\n    }\r\n    \r\n    \r\n    setnotes(newnotes);\r\n  }\r\n\r\n  return (\r\n    <Notecontext.Provider value={{notes,addNote,deletenote,getnotes,editnote}}>\r\n      {props.children}\r\n    </Notecontext.Provider>\r\n    \r\n  )\r\n}\r\n\r\nexport default Setnote\r\n","D:\\react\\project3_react\\inotebook\\frontend\\src\\components\\navbar.js",[],[],"D:\\react\\project3_react\\inotebook\\frontend\\src\\components\\home.js",[],[],"D:\\react\\project3_react\\inotebook\\frontend\\src\\context\\notecontext.js",[],[],"D:\\react\\project3_react\\inotebook\\frontend\\src\\components\\card.js",["65","66","67","68"],[],"import React, { useState } from 'react'\r\nimport { useContext } from 'react'\r\nimport Notecontext from '../context/notecontext'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction Card(props) {\r\n  const {notes,addnote,deletenote}=useContext(Notecontext)\r\n  const {note,editnote}=props;\r\n  \r\n    \r\n  return (\r\n<>\r\n    <div className={`col-md-3 card mx-3 my-3 bg-${props.theme} text-${props.theme==='light'?'dark':'light'}   `}>\r\n     \r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">{props.title}</h5>\r\n    <h6 className=\"card-subtitle mb-2 text-body-secondary\">Card subtitle</h6>\r\n    <p className=\"card-text\">{props.description}</p>\r\n    <div className=' flex '>\r\n    <i  onClick={()=>{editnote(note)}} className={`fa-solid fa-pen-to-square text-${props.theme==='light'?'dark':'light'}  `} > </i>\r\n    \r\n    <i className={`fa-solid fa-trash mx-2 text-${props.theme==='light'?'dark':'light'} `} onClick={()=>{deletenote(props.id)}}></i>\r\n    </div>\r\n  \r\n  </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n   \r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Card\r\n",{"ruleId":"69","severity":1,"message":"70","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":13},{"ruleId":"69","severity":1,"message":"73","line":9,"column":18,"nodeType":"71","messageId":"72","endLine":9,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":23,"column":7,"nodeType":"76","endLine":23,"endColumn":9,"suggestions":"77"},{"ruleId":"69","severity":1,"message":"78","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":15},{"ruleId":"69","severity":1,"message":"79","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"80","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":21},{"ruleId":"69","severity":1,"message":"81","line":70,"column":11,"nodeType":"71","messageId":"72","endLine":70,"endColumn":14},{"ruleId":"69","severity":1,"message":"82","line":96,"column":13,"nodeType":"71","messageId":"72","endLine":96,"endColumn":17},{"ruleId":"69","severity":1,"message":"83","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"84","line":4,"column":9,"nodeType":"71","messageId":"72","endLine":4,"endColumn":13},{"ruleId":"69","severity":1,"message":"85","line":7,"column":10,"nodeType":"71","messageId":"72","endLine":7,"endColumn":15},{"ruleId":"69","severity":1,"message":"73","line":7,"column":16,"nodeType":"71","messageId":"72","endLine":7,"endColumn":23},"no-unused-vars","'Cards' is defined but never used.","Identifier","unusedVar","'addnote' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getnotes' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["86"],"'Setnote' is defined but never used.","'useEffect' is defined but never used.","'useNavigate' is defined but never used.","'res' is assigned a value but never used.","'json' is assigned a value but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'notes' is assigned a value but never used.",{"desc":"87","fix":"88"},"Update the dependencies array to be: [getnotes, navigate]",{"range":"89","text":"90"},[529,531],"[getnotes, navigate]"]